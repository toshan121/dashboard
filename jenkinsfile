pipeline{
    //Directives
    agent any

    environment{
       ArtifactId = 'readMavenPom().getArtifactId()'
       Version = '1'
       Name = 'readMavenPom().getName()'
       GroupId = 'readMavenPom().getGroupId()'
    }
    stages {
        // Specify various stage with in stages

        // stage 1. Build
        stage ('Build'){
            steps {
                echo "hello tosh"
            }
        }

        // Stage2 : Testing
        stage ('Test'){
            steps {
                echo ' testing......'

            }
        }




        stage('SonarQube Analysis') {
            steps {
                echo 'Source code published to SonarQube for SCA...'
                withSonarQubeEnv('sonarqube') {
                    sh 'sonar-scanner \
                        -Dsonar.projectKey=my-python-project \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://192.168.0.61:9900 \
                        -Dsonar.login=sqa_c177434b746bab59eec2dd96619ab9317bf7e1ae'
                }
            }
        }

        // Stage3 : Publish the artifacts to Nexus
        stage ('Publish to Nexus'){
            steps {
                script {

                def NexusRepo = Version.endsWith("SNAPSHOT") ? "raw-release" : "raw-release"

                nexusArtifactUploader artifacts:
                [[artifactId: "${ArtifactId}",
                classifier: '',
                file: "main.py",
                type: 'file']],
                credentialsId: '35e9b26e-269a-4804-a70d-6b2ec7a608ce',
                groupId: "${GroupId}",
                nexusUrl: '192.168.0.61:8081',
                nexusVersion: 'nexus3',
                protocol: 'http',
                repository: "${NexusRepo}",
                version: "${Version}"
             }
            }
        }

        // Stage 4 : Print some information
        stage ('Print Environment variables'){
                    steps {
                        echo "Artifact ID is '${ArtifactId}'"
                        echo "Version is '${Version}'"
                        echo "GroupID is '${GroupId}'"
                        echo "Name is '${Name}'"
                    }
                }

//         // Stage 5 : Deploying the build artifact to Apache Tomcat
//         stage ('Deploy to Tomcat'){
//             steps {
//                 echo "Deploying ...."
//                 sshPublisher(publishers:
//                 [sshPublisherDesc(
//                     configName: 'Ansible_Controller',
//                     transfers: [
//                         sshTransfer(
//                                 cleanRemote:false,
//                                 execCommand: 'ansible-playbook /opt/playbooks/downloadanddeploy_as_tomcat_user.yaml -i /opt/playbooks/hosts',
//                                 execTimeout: 120000
//                         )
//                     ],
//                     usePromotionTimestamp: false,
//                     useWorkspaceInPromotion: false,
//                     verbose: false)
//                     ])
// 
//             }
//         }
// 
//     // Stage 6 : Deploying the build artifact to Docker
//         stage ('Deploy to Docker'){
//             steps {
//                 echo "Deploying ...."
//                 sshPublisher(publishers:
//                 [sshPublisherDesc(
//                     configName: 'Ansible_Controller',
//                     transfers: [
//                         sshTransfer(
//                                 cleanRemote:false,
//                                 execCommand: 'ansible-playbook /opt/playbooks/downloadanddeploy_docker.yaml -i /opt/playbooks/hosts',
//                                 execTimeout: 120000
//                         )
//                     ],
//                     usePromotionTimestamp: false,
//                     useWorkspaceInPromotion: false,
//                     verbose: false)
//                     ])
// 
//             }
//         }




    }

}
